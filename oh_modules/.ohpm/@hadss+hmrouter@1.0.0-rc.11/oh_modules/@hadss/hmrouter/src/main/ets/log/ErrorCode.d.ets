declare enum HMError {
    ERR_DUPLICATE_PAGE = "ERR_DUPLICATE_PAGE",
    ERR_DUPLICATE_COMPONENT = "ERR_DUPLICATE_COMPONENT",
    ERR_INIT_FRAMEWORK = "ERR_INIT_FRAMEWORK",
    ERR_INIT_COMPONENT = "ERR_INIT_COMPONENT",
    ERR_INIT_NOT_READY = "ERR_INIT_NOT_READY",
    ERR_PUSH_INVALID = "ERR_PUSH_INVALID",
    ERR_PUSH_SYS = "ERR_PUSH_SYS",
    ERR_POP_INVALID = "ERR_POP_INVALID",
    ERR_POP_SYS = "ERR_POP_SYS",
    ERR_REPLACE_INVALID = "ERR_REPLACE_INVALID",
    ERR_REPLACE_SYS = "ERR_REPLACE_SYS",
    ERR_PARAM_REQUIRED = "ERR_PARAM_REQUIRED",
    ERR_PARAM_ILLEGAL = "ERR_PARAM_ILLEGAL",
    ERR_COMPONENT_GET_FAILED = "ERR_COMPONENT_GET_FAILED",
    ERR_COMPONENT_NOT_EXIST = "ERR_COMPONENT_NOT_EXIST",
    ERR_COMPONENT_PROCESS = "ERR_COMPONENT_PROCESS",
    ERR_INTERNAL = "ERR_INTERNAL",
    ERR_SERVICE_NOT_EXIST = "ERR_SERVICE_NOT_EXIST",
    ERR_SERVICE_IMPORT_FAILED = "ERR_SERVICE_IMPORT_FAILED",
    ERR_SERVICE_EXECUTE_FAILED = "ERR_SERVICE_EXECUTE_FAILED",
    ERR_DYNAMIC_IMPORT_FAILED = "ERR_DYNAMIC_IMPORT_FAILED"
}
interface HMErrorInfo {
    errorCode: number;
    errorMsg: string;
}
declare const DEFINED_ERROR: Map<string, HMErrorInfo>;
export { HMError, DEFINED_ERROR };
